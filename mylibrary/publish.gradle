apply plugin: 'maven-publish'

def LIB_GROUP_ID = 'br.com.warren.mylibrary'
def LIB_ARTIFACT_ID = project.getName()
def LIB_VERSION = '1.0.10'

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    repositories {
        maven {
            name = "GithubPackages"
            url = uri("https://maven.pkg.github.com/wottrichwarren/library-compose")
            credentials {
                username = "wottrichwarren"//System.getenv('GITHUB_USER') ?: project.properties['GITHUB_USER']
                password = "91abb80532968a2bd61355308ea9b3806dac381c"//System.getenv('GITHUB_PERSONAL_ACCESS_TOKEN') ?: project.properties['GITHUB_PERSONAL_ACCESS_TOKEN']
            }
        }
        maven {
            name = 'CustomMavenRepo'
            url = "file://${buildDir}/repo"
        }
    }
    publications {
        mylibrary(MavenPublication) {
            groupId LIB_GROUP_ID
            artifactId LIB_ARTIFACT_ID
            version LIB_VERSION
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            artifact(sourceJar)

//            pom.withXml {
//                def dependenciesNode = asNode().appendNode('dependencies')
//
//                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
//                configurations.api.allDependencies.each {
//                    def dependencyNode = dependenciesNode.appendNode('dependency')
//                    dependencyNode.appendNode('groupId', it.group)
//                    dependencyNode.appendNode('artifactId', it.name)
//                    dependencyNode.appendNode('version', it.version)
//                }
//            }
        }
    }
}